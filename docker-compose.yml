version: '3.8'

services:
  auth_postgres_db:
    image: postgres:15.3
    container_name: auth_postgres_db
    restart: always
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    environment:
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
#      POSTGRES_DB: ${AUTH_DB_NAME}
      POSTGRES_PORT: ${DB_PORT}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    volumes:
      - ./pg_data/auth:/var/lib/postgresql/data
#      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  auth:
    build:
      context: .
      dockerfile: ./auth/Dockerfile
    image: docker-auth
    container_name: auth
    restart: always
    environment:
      AUTH_DB_HOST: auth_postgres_db
      AUTH_DB_USER: ${AUTH_DB_USER}
      AUTH_DB_PASSWORD: ${AUTH_DB_PASSWORD}
      AUTH_DB_NAME: ${AUTH_DB_NAME}
      AUTH_DB_PORT: ${AUTH_DB_PORT}
      PUBLIC_KEY: ${PUBLIC_KEY}
      PRIVATE_KEY: ${PRIVATE_KEY}
    ports:
      - 8000:8000
    depends_on:
      - auth_postgres_db

#  task_board:
#    build:
#      context: .
#      dockerfile: ./task_board/Dockerfile
#    image: docker-task_board
#    container_name: task_board
#    restart: always
#    environment:
#      AUTH_DB_HOST: auth_postgres_db
#      AUTH_DB_USER: ${AUTH_DB_USER}
#      AUTH_DB_PASSWORD: ${AUTH_DB_PASSWORD}
#      AUTH_DB_NAME: ${AUTH_DB_NAME}
#      AUTH_DB_PORT: ${AUTH_DB_PORT}
#      PUBLIC_KEY: ${PUBLIC_KEY}
#      PRIVATE_KEY: ${PRIVATE_KEY}
#    ports:
#      - 8000:8000
#    depends_on:
#      - auth_postgres_db
#    entrypoint: ["uvicorn", "main:app_task_board", "--host", "0.0.0.0", "--port", "8001"]
#
#  task_board_scheduled:
#    build:
#      context: .
#      dockerfile: ./task_board/Dockerfile
#    image: docker-task_board
#    container_name: task_board
#    restart: always
#    environment:
#      AUTH_DB_HOST: auth_postgres_db
#      AUTH_DB_USER: ${AUTH_DB_USER}
#      AUTH_DB_PASSWORD: ${AUTH_DB_PASSWORD}
#      AUTH_DB_NAME: ${AUTH_DB_NAME}
#      AUTH_DB_PORT: ${AUTH_DB_PORT}
#      PUBLIC_KEY: ${PUBLIC_KEY}
#      PRIVATE_KEY: ${PRIVATE_KEY}
#    ports:
#      - 8000:8000
#    depends_on:
#      - auth_postgres_db
#    entrypoint: ["python", "scheduled_tasks/task_board_scheduler.py"]

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1